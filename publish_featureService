#Python Script that will let users publish to their ArcGIS Server
#Author: Tewodros Hailegeberel
#Date: 1/30/2019
#This script was developed by ESRI (https://pro.arcgis.com/en/pro-app/arcpy/sharing/mapservicedraft-class.htm)
#This script is using arcpy.GetParameterAsText to give it UI until ArcPro 2.4 comes out.
#After you've added this script to your toolbox, you have to right click on the script and create the Parameters
#Make sure the name matches the variable name Example: serviceName = arcpy.GetParameterAsText(0), Name 
#should be serviceName
#For sddraft.serverFolder = arcpy.GetParameterAsText(2) under Type, make it optional. The script by default will place
#the service under root site if folder name is not given. Also, it will create the folder name if folder does not exist
#For server_con = arcpy.GetParameterAsText(3) change the Filter to Value List. If you have more than one type of connection
#you can set them to your connection names. Make sure the connections are under favorites. 
#For tempPath = arcpy.GetParameterAsText(1) the Data Type should be Folder. This will give the user the ability to select which
#folder they would like to use. It can also be set to a default location if you use one central location on your network or hard drive.

import arcpy, os, sys
import xml.dom.minidom as DOM

arcpy.env.overwriteOutput = True

# Update these variables
# serviceName = "BMP_SystemMap"
serviceName = arcpy.GetParameterAsText(0)

#tempPath = r"C:\Users\[UserName]\Documents\ArcGIS Pro 2.0\Services"
tempPath = arcpy.GetParameterAsText(1)

path2APRX = r"C:\Users\[UserName]\Documents\ArcGIS\Projects\BMPPublisher\BMPPublisher.aprx"

#server_con = r"C:\Users\[UserName]\AppData\Roaming\Esri\ArcGISPro\Favorites\PGCOITGISWEBX04_6443 (admin).ags"
#server_con = r"C:\Users\[UserName]\AppData\Roaming\Esri\ArcGISPro\Favorites\WEBEX01_Admin.ags"
#server_con = r"C:\Users\[UserName]\AppData\Roaming\Esri\ArcGISPro\Favorites\WEBEX02_Admin.ags"
server_con = arcpy.GetParameterAsText(3)

# All paths are built by joining names to the tempPath
SDdraftPath = os.path.join(tempPath, "tempdraft.sddraft")
newSDdraftPath = os.path.join(tempPath, "updatedDraft.sddraft")
SDPath = os.path.join(tempPath, serviceName + ".sd")

aprx = arcpy.mp.ArcGISProject(path2APRX)
# Refers to your map name and position within the map project in ArcPro
m = aprx.listMaps('BMPData')[0]

# Create MapServiceDraft and set service properties
sddraft = arcpy.sharing.CreateSharingDraft('STANDALONE_SERVER', 'MAP_SERVICE', serviceName, m)
#sddraft.serverFolder = "BMPSystemMap"
sddraft.serverFolder = arcpy.GetParameterAsText(2)
sddraft.targetServer = server_con

# copyDataToServer = False will reference data from registered data sources with the targetServer
sddraft.copyDataToServer = False
sddraft.exportToSDDraft(SDdraftPath)

# Read the contents of the original SDDraft into an xml parser
doc = DOM.parse(SDdraftPath)

# The follow code piece modifies the SDDraft from a new MapService with caching capabilities
# to a FeatureService with Map, Create and Query capabilities.
typeNames = doc.getElementsByTagName('TypeName')
for typeName in typeNames:
    if typeName.firstChild.data == "FeatureServer":
        extention = typeName.parentNode
        for extElement in extention.childNodes:
            if extElement.tagName == 'Enabled':
                extElement.firstChild.data = 'true'

# Turn off caching
configProps = doc.getElementsByTagName('ConfigurationProperties')[0]
propArray = configProps.firstChild
propSets = propArray.childNodes
for propSet in propSets:
    keyValues = propSet.childNodes
    for keyValue in keyValues:
        if keyValue.tagName == 'Key':
            if keyValue.firstChild.data == "isCached":
                keyValue.nextSibling.firstChild.data = "false"

# Turn on feature access capabilities
configProps = doc.getElementsByTagName('Info')[0]
propArray = configProps.firstChild
propSets = propArray.childNodes
for propSet in propSets:
    keyValues = propSet.childNodes
    for keyValue in keyValues:
        if keyValue.tagName == 'Key':
            if keyValue.firstChild.data == "WebCapabilities":
                keyValue.nextSibling.firstChild.data = "Map,Query,Data"

# Write the new draft to disk
f = open(newSDdraftPath, 'w')
doc.writexml(f)
f.close()

# Stage the service
arcpy.StageService_server(newSDdraftPath, SDPath)
print("Staged service")

# Upload the service
arcpy.UploadServiceDefinition_server(SDPath, server_con)
print("Uploaded service")
